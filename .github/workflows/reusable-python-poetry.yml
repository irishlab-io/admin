---
name: Reusable - Python Poetry

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      python-version:
        description: Simple string for testing purpose
        type: string
        required: false
        default: "3.12"
      poetry-version:
        description: Simple string for testing purpose
        type: string
        required: false
        default: "latest"
      poetry-installer:
        description: Simple boolean flag for testing purpose
        type: boolean
        required: false
        default: true
      poetry-create:
        description: Simple boolean flag for testing purpose
        type: boolean
        required: false
        default: true
      poetry-in-project:
        description: Simple boolean flag for testing purpose
        type: boolean
        required: false
        default: true
      poetry-path:
        description: Simple boolean flag for testing purpose
        type: string
        required: false
        default: "{cache-dir}/virtualenvs"

jobs:
  python-poetry:
    name: Python - Poetry
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    defaults:
      run:
        shell: bash

    strategy:
      max-parallel: 16
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup python
        id: setup-python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ inputs.poetry-version }}
          installer-parallel: ${{ inputs.poetry-installer }}
          virtualenvs-create: ${{ inputs.poetry-create }}
          virtualenvs-in-project: ${{ inputs.poetry-in-project }}
          virtualenvs-path: ${{ inputs.poetry-path }}

      - name: Load cached venv
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        run: |
          poetry install --verbose --no-interaction --no-root

      - name: Install project
        run: |
          poetry install --verbose --no-interaction

      - name: Run tests and generate coverage
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report -m
